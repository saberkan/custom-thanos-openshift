{{- $query := (include "thanos.query.values" . | fromYaml) -}}
{{- if .Values.queryFrontend.enabled }}
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}-query-frontend
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: query-frontend
spec:
  replicas: {{ .Values.queryFrontend.replicaCount }}
  strategy:
    type: {{ .Values.queryFrontend.strategyType }}
    {{- if (eq "Recreate" .Values.queryFrontend.strategyType) }}
    rollingUpdate: null
    {{- end }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: query-frontend
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: query-frontend
      {{- if or .Values.queryFrontend.podAnnotations (include "thanos.queryFrontend.createConfigmap" .) }}
      annotations:
        {{- if (include "thanos.queryFrontend.createConfigmap" .) }}
        checksum/query-frontend-configuration: {{ include (print $.Template.BasePath "/query-frontend/configmap.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.queryFrontend.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.queryFrontend.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
      {{- end }}
    spec:
      {{- include "thanos.imagePullSecrets" . | nindent 6 }}
      serviceAccount: {{ include "thanos.serviceaccount.name" (dict "component" "query-frontend" "context" $) }}
      {{- if .Values.queryFrontend.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.queryFrontend.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.queryFrontend.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.queryFrontend.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.queryFrontend.podAffinityPreset "component" "query-frontend" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.queryFrontend.podAntiAffinityPreset "component" "query-frontend" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.queryFrontend.nodeAffinityPreset.type "key" .Values.queryFrontend.nodeAffinityPreset.key "values" .Values.queryFrontend.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.queryFrontend.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.queryFrontend.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.queryFrontend.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.queryFrontend.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.queryFrontend.priorityClassName }}
      priorityClassName: {{ .Values.queryFrontend.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.queryFrontend.securityContext.enabled }}
      securityContext:
        runAsUser: {{ .Values.queryFrontend.securityContext.runAsUser }}
        fsGroup: {{ .Values.queryFrontend.securityContext.fsGroup }}
      {{- end }}
      containers:
        - name: query-frontend
          image: {{ include "thanos.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          args:
            - query-frontend
            - --log.level={{ .Values.queryFrontend.logLevel }}
            - --http-address=0.0.0.0:10902
            - --query-frontend.downstream-url=http://{{ include "common.names.fullname" . }}-query:{{ $query.service.http.port }}
            {{- if or .Values.queryFrontend.config .Values.queryFrontend.existingConfigmap }}
            - --query-range.response-cache-config-file=/conf/cache/config.yml
            {{- end }}
            {{- if .Values.queryFrontend.extraFlags }}
            {{- .Values.queryFrontend.extraFlags | toYaml | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: 10902
              protocol: TCP
          {{- if .Values.queryFrontend.livenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.queryFrontend.livenessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.queryFrontend.readinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.queryFrontend.readinessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.queryFrontend.resources }}
          resources: {{- toYaml .Values.queryFrontend.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- if or .Values.queryFrontend.config .Values.queryFrontend.existingConfigmap }}
            - name: cache-config
              mountPath: /conf/cache
            {{- end }}
      volumes:
        {{- if or .Values.queryFrontend.config .Values.queryFrontend.existingConfigmap }}
        - name: cache-config
          configMap:
            name: {{ include "thanos.queryFrontend.configmapName" . }}
        {{- end }}
{{- end }}
